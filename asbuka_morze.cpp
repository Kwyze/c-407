#include <iostream> // Подключает библиотеку для ввода и вывода данных (например, cout и cin).
#include <string> // Подключает библиотеку для работы со строками.
#include <map> // Подключает библиотеку для использования ассоциативного контейнера map (словарь).
#include <algorithm> // Подключает библиотеку с алгоритмами, такими как transform (хотя в этом коде он не используется).
#include <sstream> // Подключает библиотеку для работы со строковыми потоками (например, stringstream).

using namespace std; // Использует пространство имен std, чтобы избежать префиксов std:: для объектов, таких как cout, string, и т. д.

// функция для преобразования символа в код Морзе
string charToMorse(char c, const map<char, string>& morseCodeMap) { // Объявляет функцию charToMorse, которая принимает символ и карту кодов Морзе и возвращает код Морзе для этого символа.


    c = toupper(c); // Преобразует символ в верхний регистр для упрощения поиска в карте.
    auto it = morseCodeMap.find(c); // Ищет символ в карте morseCodeMap.  it будет итератором на найденный элемент или morseCodeMap.end(), если символ не найден.
    if (it != morseCodeMap.end()) { // Проверяет, был ли символ найден в карте.
        return it->second; // Если символ найден, возвращает соответствующий ему код Морзе (значение в карте).
    }
    else {
        return ""; // Возвращает пустую строку, если символ не найден в карте.
    }
}

// Функция для преобразования строки в код Морзе
string stringToMorse(const string& text, const map<char, string>& morseCodeMap) { // Объявляет функцию stringToMorse, которая принимает строку и карту кодов Морзе и возвращает строку, содержащую коды Морзе для каждого символа в строке.
    stringstream morseCode; // Создает объект stringstream для построения результирующей строки кодов Морзе.
    for (char c : text) { // Цикл перебирает каждый символ в входной строке.
        string morse = charToMorse(c, morseCodeMap); // Получает код Морзе для текущего символа, вызывая функцию charToMorse.
        if (!morse.empty()) { // Проверяет, был ли найден код Морзе для символа.
            morseCode << morse << " "; // Если код найден, добавляет его в stringstream morseCode с пробелом для разделения кодов отдельных символов.
        }
        else if (c == ' ') { // Если символ - пробел
            morseCode << "/ "; // добавляем разделитель слов
        }
    }
    return morseCode.str(); // Возвращает строку кодов Морзе, извлеченную из stringstream.
}

int main() { // Главная функция программы.
    setlocale(LC_ALL, "Russian"); // Устанавливает локаль для поддержки русских символов (может быть не нужна для кодирования в Морзе, но может понадобиться для вывода сообщений).
    // Карта кодов Морзе (символ -> код Морзе)
    map<char, string> morseCodeMap = { // Инициализирует карту morseCodeMap, которая связывает символы (ключи) с их кодами Морзе (значения).
        {'A', ".-"}, {'B', "-..."}, {'C', "-.-."}, {'D', "-.."}, {'E', "."}, // Коды для букв A-E.
        {'F', "..-."}, {'G', "--."}, {'H', "...."}, {'I', ".."}, {'J', ".---"}, // Коды для букв F-J.
        {'K', "-.-"}, {'L', ".-.."}, {'M', "--"}, {'N', "-."}, {'O', "---"}, // Коды для букв K-O.
        {'P', ".--."}, {'Q', "--.-"}, {'R', ".-."}, {'S', "..."}, {'T', "-"}, // Коды для букв P-T.
        {'U', "..-"}, {'V', "...-"}, {'W', ".--"}, {'X', "-..-"}, {'Y', "-.--"}, // Коды для букв U-Y.
        {'Z', "--.."}, // Код для буквы Z.
        {'0', "-----"}, {'1', ".----"}, {'2', "..---"}, {'3', "...--"}, {'4', "....-"}, // Коды для цифр 0-4.
        {'5', "....."}, {'6', "-...."}, {'7', "--..."}, {'8', "---.."}, {'9', "----."}, // Коды для цифр 5-9.
        {'.', ".-.-.-"}, {',', "--..--"}, {'?', "..--.."}, {'/', "-..-."}, {'-', "-....-"}, {'(', "-.--."}, {')', "-.--.-"} // Коды для некоторых знаков препинания.
    };

    string text; // Объявляет строковую переменную text для хранения входного текста.


    cout << "Введите текст для шифрования в азбуку Морзе: "; // Выводит сообщение с запросом ввода текста.
    getline(cin, text); // Использует getline, чтобы читать строки с пробелами - считывает строку текста из стандартного ввода и сохраняет её в переменной text.

    string morseCode = stringToMorse(text, morseCodeMap); // Преобразует введенный текст в код Морзе, вызывая функцию stringToMorse.

    cout << "Код Морзе: " << morseCode << endl; // Выводит полученный код Морзе на экран.

    return 0; // Возвращает 0, указывая на успешное завершение программы.
}